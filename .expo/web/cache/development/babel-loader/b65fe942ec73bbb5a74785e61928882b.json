{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from 'expo-secure-store';\nimport LoginScreen from \"../../screens/LoginScreen\";\nexport var SIGNUP = 'SIGNUP';\nexport var LOGIN = 'LOGIN';\nexport var RESTORE_USER = 'RESTORE_USER';\nexport var LOGOUT = \"LOGOUT\";\nexport var restoreUser = function restoreUser(email, token) {\n  return {\n    type: RESTORE_USER,\n    payload: {\n      email: email,\n      idToken: token\n    }\n  };\n};\nexport var logout = function logout() {\n  SecureStore.deleteItemAsync('email');\n  SecureStore.deleteItemAsync('token');\n  return {\n    type: LOGOUT\n  };\n};\nexport var signup = function signup(email, password) {\n  return function _callee(dispatch) {\n    var response, data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDl9YBM32ozw7O0PP75nE52xpzWf_MZ4w4', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n\n            if (!response.ok) {} else {\n              dispatch({\n                type: SIGNUP,\n                payload: {\n                  email: data.email,\n                  idToken: data.idToken\n                }\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var login = function login(email, password) {\n  return function _callee2(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDl9YBM32ozw7O0PP75nE52xpzWf_MZ4w4', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 2:\n            response = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"names":["SecureStore","LoginScreen","SIGNUP","LOGIN","RESTORE_USER","LOGOUT","restoreUser","email","token","type","payload","idToken","logout","deleteItemAsync","signup","password","dispatch","fetch","method","headers","body","JSON","stringify","returnSecureToken","response","json","data","console","log","ok","login"],"sources":["/Users/astavittrupgraversen/Desktop/react_native 2/store/actions/UserActions.js"],"sourcesContent":["import * as SecureStore from 'expo-secure-store';\nimport LoginScreen from '../../screens/LoginScreen';\nexport const SIGNUP = 'SIGNUP';\nexport const LOGIN = 'LOGIN';\nexport const RESTORE_USER = 'RESTORE_USER';\nexport const LOGOUT = \"LOGOUT\";\n\n\nexport const restoreUser = (email, token) => {\n    return { type: RESTORE_USER, payload: { email, idToken: token } };\n};\n\nexport const logout = () => {\n    SecureStore.deleteItemAsync('email');\n    SecureStore.deleteItemAsync('token');\n    return { type: LOGOUT }\n}\n\nexport const signup = (email, password) => {\n    return async dispatch => {\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDl9YBM32ozw7O0PP75nE52xpzWf_MZ4w4', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ //javascript to json\n                //key value pairs of data you want to send to server\n                // ...\n                email: email,\n                password: password,\n                returnSecureToken: true\n            })\n        });\n\n\n        \n\n        // console.log(await response.json());\n\n        const data = await response.json(); // json to javascript\n        console.log(data);\n        if (!response.ok) {\n            //There was a problem..\n        } else {\n            // await SecureStore.setItemAsync('email', data.email);\n            // await SecureStore.setItemAsync('token', data.idToken);\n            dispatch({ type: SIGNUP, payload: { email: data.email, idToken: data.idToken } })\n        }\n    };\n};\n\nexport const login = (email, password) => {\n    return async dispatch => {\n        const response = await fetch ('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDl9YBM32ozw7O0PP75nE52xpzWf_MZ4w4', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password,\n                returnSecureToken: true\n            })\n            \n        });\n\n        \n    }}\n\n    "],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,WAAP;AACA,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AAGP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;EACzC,OAAO;IAAEC,IAAI,EAAEL,YAAR;IAAsBM,OAAO,EAAE;MAAEH,KAAK,EAALA,KAAF;MAASI,OAAO,EAAEH;IAAlB;EAA/B,CAAP;AACH,CAFM;AAIP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;EACxBZ,WAAW,CAACa,eAAZ,CAA4B,OAA5B;EACAb,WAAW,CAACa,eAAZ,CAA4B,OAA5B;EACA,OAAO;IAAEJ,IAAI,EAAEJ;EAAR,CAAP;AACH,CAJM;AAMP,OAAO,IAAMS,MAAM,GAAG,SAATA,MAAS,CAACP,KAAD,EAAQQ,QAAR,EAAqB;EACvC,OAAO,iBAAMC,QAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACoBC,KAAK,CAAC,uGAAD,EAA0G;cAClIC,MAAM,EAAE,MAD0H;cAElIC,OAAO,EAAE;gBACL,gBAAgB;cADX,CAFyH;cAKlIC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBAGjBf,KAAK,EAAEA,KAHU;gBAIjBQ,QAAQ,EAAEA,QAJO;gBAKjBQ,iBAAiB,EAAE;cALF,CAAf;YAL4H,CAA1G,CADzB;;UAAA;YACGC,QADH;YAAA;YAAA,iCAoBgBA,QAAQ,CAACC,IAAT,EApBhB;;UAAA;YAoBGC,IApBH;YAqBHC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;YACA,IAAI,CAACF,QAAQ,CAACK,EAAd,EAAkB,CAEjB,CAFD,MAEO;cAGHb,QAAQ,CAAC;gBAAEP,IAAI,EAAEP,MAAR;gBAAgBQ,OAAO,EAAE;kBAAEH,KAAK,EAAEmB,IAAI,CAACnB,KAAd;kBAAqBI,OAAO,EAAEe,IAAI,CAACf;gBAAnC;cAAzB,CAAD,CAAR;YACH;;UA5BE;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAP;AA8BH,CA/BM;AAiCP,OAAO,IAAMmB,KAAK,GAAG,SAARA,KAAQ,CAACvB,KAAD,EAAQQ,QAAR,EAAqB;EACtC,OAAO,kBAAMC,QAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACoBC,KAAK,CAAE,mHAAF,EAAuH;cAC/IC,MAAM,EAAE,MADuI;cAE/IC,OAAO,EAAE;gBACL,gBAAgB;cADX,CAFsI;cAK/IC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACjBf,KAAK,EAAEA,KADU;gBAEjBQ,QAAQ,EAAEA,QAFO;gBAGjBQ,iBAAiB,EAAE;cAHF,CAAf;YALyI,CAAvH,CADzB;;UAAA;YACGC,QADH;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAP;AAeE,CAhBC"},"metadata":{},"sourceType":"module"}