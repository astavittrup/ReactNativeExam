{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { Chatroom } from \"../../entities/Chatroom\";\nimport { SUBTRACT, TOGGLE_HAPPY, ADD, ADD_CHATROOM, DELETE_CHATROOM, FETCH_CHATROOMS } from \"../actions/ChatActions\";\nvar initialState = {\n  chatrooms: [],\n  counter: 0,\n  isHappy: false,\n  name: 'Asta'\n};\n\nvar chatReducer = function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter + 1\n      });\n\n    case SUBTRACT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter - 1\n      });\n\n    case TOGGLE_HAPPY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isHappy: !state.isHappy\n      });\n\n    case FETCH_CHATROOMS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatrooms: action.payload\n      });\n\n    case ADD_CHATROOM:\n      console.log(action.payload);\n      var chatroom = new Chatroom(action.payload.chatroomName, [], '', action.payload.id);\n      var newChatroomArray = [].concat(_toConsumableArray(state.chatrooms), [chatroom]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatrooms: newChatroomArray\n      });\n\n    case DELETE_CHATROOM:\n      console.log(action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        chatrooms: state.chatrooms.filter(function (chatroom) {\n          return chatroom.id !== action.payload;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default chatReducer;","map":{"version":3,"names":["Chatroom","SUBTRACT","TOGGLE_HAPPY","ADD","ADD_CHATROOM","DELETE_CHATROOM","FETCH_CHATROOMS","initialState","chatrooms","counter","isHappy","name","chatReducer","state","action","type","payload","console","log","chatroom","chatroomName","id","newChatroomArray","filter"],"sources":["/Users/astavittrupgraversen/Desktop/react_native 2/store/reducers/ChatReducer.js"],"sourcesContent":["import { Chatroom } from \"../../entities/Chatroom\";\nimport { SUBTRACT, TOGGLE_HAPPY, ADD, ADD_CHATROOM, DELETE_CHATROOM, FETCH_CHATROOMS } from \"../actions/ChatActions\";\n\nconst initialState = {\n    chatrooms: [],\n    counter: 0,\n    isHappy: false,\n    name: 'Asta'\n};\n\nconst chatReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD:\n            return { ...state, counter: state.counter + 1 }\n        case SUBTRACT:\n            return { ...state, counter: state.counter - 1 }\n        case TOGGLE_HAPPY:\n            return { ...state, isHappy: !state.isHappy }\n        case FETCH_CHATROOMS:\n            return { ...state, chatrooms: action.payload }\n\n        case ADD_CHATROOM:\n            console.log(action.payload); // Should print out the chatroomName\n            //state.chatrooms.push(chatroom); // mutate chatrroms array! Not Allowed!\n\n            const chatroom = new Chatroom(action.payload.chatroomName, [], '', action.payload.id);\n            // const chatroom = { title: action.payload, chatmessages: [], imageUrl: ''}\n\n            const newChatroomArray = [...state.chatrooms, chatroom];\n            return { ...state, chatrooms: newChatroomArray };\n\n        case DELETE_CHATROOM:\n            console.log(action.payload);\n            return {\n                ...state, chatrooms:\n                    state.chatrooms.filter(chatroom => chatroom.id !== action.payload)\n            }\n\n\n\n        //            return {...state, chatrooms: [...state.chatrooms, {title: action.payload}]}\n\n\n        // state.isHappy = !state.isHappy; // not allowed, it mutates the prior state\n\n        default:\n            return state; //does not do anything yetâ€‹   \n    }\n};\n\nexport default chatReducer;"],"mappings":";;;;;;;AAAA,SAASA,QAAT;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,GAAjC,EAAsCC,YAAtC,EAAoDC,eAApD,EAAqEC,eAArE;AAEA,IAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EADM;EAEjBC,OAAO,EAAE,CAFQ;EAGjBC,OAAO,EAAE,KAHQ;EAIjBC,IAAI,EAAE;AAJW,CAArB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKZ,GAAL;MACI,uCAAYU,KAAZ;QAAmBJ,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;MAA5C;;IACJ,KAAKR,QAAL;MACI,uCAAYY,KAAZ;QAAmBJ,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;MAA5C;;IACJ,KAAKP,YAAL;MACI,uCAAYW,KAAZ;QAAmBH,OAAO,EAAE,CAACG,KAAK,CAACH;MAAnC;;IACJ,KAAKJ,eAAL;MACI,uCAAYO,KAAZ;QAAmBL,SAAS,EAAEM,MAAM,CAACE;MAArC;;IAEJ,KAAKZ,YAAL;MACIa,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;MAGA,IAAMG,QAAQ,GAAG,IAAInB,QAAJ,CAAac,MAAM,CAACE,OAAP,CAAeI,YAA5B,EAA0C,EAA1C,EAA8C,EAA9C,EAAkDN,MAAM,CAACE,OAAP,CAAeK,EAAjE,CAAjB;MAGA,IAAMC,gBAAgB,gCAAOT,KAAK,CAACL,SAAb,IAAwBW,QAAxB,EAAtB;MACA,uCAAYN,KAAZ;QAAmBL,SAAS,EAAEc;MAA9B;;IAEJ,KAAKjB,eAAL;MACIY,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;MACA,uCACOH,KADP;QACcL,SAAS,EACfK,KAAK,CAACL,SAAN,CAAgBe,MAAhB,CAAuB,UAAAJ,QAAQ;UAAA,OAAIA,QAAQ,CAACE,EAAT,KAAgBP,MAAM,CAACE,OAA3B;QAAA,CAA/B;MAFR;;IAYJ;MACI,OAAOH,KAAP;EAnCR;AAqCH,CAtCD;;AAwCA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}