{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, addChatroom, deleteChatroom, fetchChatrooms, subtract, toggleHappy } from \"../store/actions/ChatActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Screen1 = function Screen1(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      onChangeText = _useState2[1];\n\n  var isHappy = useSelector(function (state) {\n    return state.chat.isHappy;\n  });\n  var dispatch = useDispatch();\n  var numberOfIcecreams = useSelector(function (state) {\n    return state.chat.counter;\n  });\n  var chatrooms = useSelector(function (state) {\n    return state.chat.chatrooms;\n  });\n  useEffect(function () {\n    dispatch(fetchChatrooms());\n  }, []);\n  console.log(\"chatrooms\", chatrooms);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      children: [_jsx(Text, {\n        children: item.title\n      }), _jsx(Button, {\n        title: \"Delete this chatroom\",\n        onPress: function onPress() {\n          return dispatch(deleteChatroom(item.id));\n        }\n      })]\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"I am screen 1\"\n    }), _jsxs(Text, {\n      children: [\"Is Christian happy? \", isHappy.toString()]\n    }), _jsxs(Text, {\n      children: [\"How many icecreams should Christians children have \", numberOfIcecreams]\n    }), _jsx(Button, {\n      title: \"Go to screen 2\",\n      onPress: function onPress() {\n        return navigation.navigate('Screen2');\n      }\n    }), _jsx(Button, {\n      title: \"Flip happy\",\n      onPress: function onPress() {\n        return dispatch(toggleHappy());\n      }\n    }), _jsx(Button, {\n      title: \"Give Icecream\",\n      onPress: function onPress() {\n        return dispatch(add());\n      }\n    }), _jsx(Button, {\n      title: \"Steal Icecream\",\n      onPress: function onPress() {\n        return dispatch(subtract());\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Chatroom name\",\n      style: styles.input,\n      onChangeText: onChangeText,\n      value: text\n    }), _jsx(Button, {\n      title: \"Add chatroom\",\n      onPress: function onPress() {\n        return dispatch(addChatroom(text));\n      }\n    }), _jsx(FlatList, {\n      data: chatrooms,\n      renderItem: renderItem\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textInput: {\n    padding: 15,\n    maxWidth: 250,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  }\n});\nexport default Screen1;","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","add","addChatroom","deleteChatroom","fetchChatrooms","subtract","toggleHappy","Screen1","navigation","text","onChangeText","isHappy","state","chat","dispatch","numberOfIcecreams","counter","chatrooms","console","log","renderItem","item","title","id","toString","navigate","styles","input","StyleSheet","create","container","flex","justifyContent","alignItems","textInput","padding","maxWidth","paddingHorizontal","backgroundColor","borderRadius","borderColor","borderWidth"],"sources":["/Users/astavittrupgraversen/Desktop/react_native 2/screens/Screen1.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, FlatList, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../App';\nimport { add, addChatroom, deleteChatroom, fetchChatrooms, subtract, toggleHappy } from '../store/actions/ChatActions';\n\nconst Screen1 = ({ navigation }: { navigation: any }) => {\n    const [text, onChangeText] = useState('');\n\n    const isHappy = useSelector((state: RootState) => state.chat.isHappy); // subscribing to the store's chat slice/part\n    const dispatch = useDispatch();\n    const numberOfIcecreams = useSelector((state: RootState) => state.chat.counter)\n    const chatrooms = useSelector((state: RootState) => state.chat.chatrooms);\n\n    useEffect(() => {\n        dispatch(fetchChatrooms())\n    }, []);\n\n    console.log(\"chatrooms\", chatrooms);\n\n    const renderItem = ({ item }: { item: any }) => (\n        <TouchableOpacity>\n            <Text>{item.title}</Text>\n            <Button title=\"Delete this chatroom\" onPress={() => dispatch(deleteChatroom(item.id))} />\n        </TouchableOpacity>\n    );\n\n\n    return (\n        <View>\n            <Text>I am screen 1</Text>\n            <Text>Is Christian happy? {isHappy.toString()}</Text>\n            <Text>How many icecreams should Christians children have {numberOfIcecreams}</Text>\n            <Button title=\"Go to screen 2\" onPress={() => navigation.navigate('Screen2')} />\n            <Button title=\"Flip happy\" onPress={() => dispatch(toggleHappy())} />\n\n            <Button title=\"Give Icecream\" onPress={() => dispatch(add())} />\n            <Button title=\"Steal Icecream\" onPress={() => dispatch(subtract())} />\n\n            <TextInput placeholder=\"Chatroom name\"\n                style={styles.input}\n                onChangeText={onChangeText}\n                value={text} />\n\n            <Button title='Add chatroom' onPress={() => dispatch(addChatroom(text))} />\n\n            <FlatList data={chatrooms} renderItem={renderItem} />\n        </View>\n    );\n}\n\n// const styles = StyleSheet.create({\n//     input: {\n//         height: 40,\n//         margin: 12,\n//         borderWidth: 1,\n//         padding: 10,\n//     },\n// });\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n  \n    textInput: {\n      padding: 15,\n      maxWidth: 250,\n      paddingHorizontal: 15,\n      backgroundColor: '#FFF',\n      borderRadius: 60,\n      borderColor: '#C0C0C0',\n      borderWidth: 1\n    },\n  \n  });\n\nexport default Screen1;"],"mappings":"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"},"metadata":{},"sourceType":"module"}