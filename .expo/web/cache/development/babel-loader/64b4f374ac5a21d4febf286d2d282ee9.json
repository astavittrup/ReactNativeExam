{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = require(\"react\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _UserActions = require(\"./../store/actions/UserActions\");\n\nvar SecureStore = _interopRequireWildcard(require(\"expo-secure-store\"));\n\nvar _jsxFileName = \"/Users/astavittrupgraversen/repo/ReactNativeExam/screens/LoginScreen.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  function load() {\n    var emailFromSecureStore, tokenFromSecureStore;\n    return _regenerator.default.async(function load$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(SecureStore.getItemAsync('email'));\n\n          case 2:\n            emailFromSecureStore = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(SecureStore.getItemAsync('token'));\n\n          case 5:\n            tokenFromSecureStore = _context.sent;\n\n            if (emailFromSecureStore && tokenFromSecureStore) {\n              console.log(\"success\", emailFromSecureStore);\n              dispatch((0, _UserActions.restoreUser)(emailFromSecureStore, tokenFromSecureStore));\n            } else {\n              console.log(\"failure\");\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n  return React.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Please enter your credentials to login\"), React.createElement(_reactNative.TextInput, {\n    placeholder: \"email\",\n    onChangeText: setEmail,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(_reactNative.TextInput, {\n    placeholder: \"Password\",\n    onChangeText: setPassword,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), React.createElement(_reactNative.Button, {\n    title: \"Login\",\n    onPress: function onPress() {\n      return dispatch((0, _UserActions.login)(email, password));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar _default = LoginScreen;\nexports.default = _default;","map":{"version":3,"names":["LoginScreen","navigation","email","setEmail","password","setPassword","dispatch","load","SecureStore","getItemAsync","emailFromSecureStore","tokenFromSecureStore","console","log"],"sources":["/Users/astavittrupgraversen/repo/ReactNativeExam/screens/LoginScreen.jsx"],"sourcesContent":["import { View, Text, TextInput, Button } from 'react-native';\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { restoreUser, login } from './../store/actions/UserActions'\nimport * as SecureStore from 'expo-secure-store';\n\n\nfunction LoginScreen({ navigation }) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n\n    async function load() {\n        let emailFromSecureStore = await SecureStore.getItemAsync('email');\n        let tokenFromSecureStore = await SecureStore.getItemAsync('token');\n        if (emailFromSecureStore && tokenFromSecureStore) {\n            console.log(\"success\", emailFromSecureStore);\n            dispatch(restoreUser(emailFromSecureStore, tokenFromSecureStore));\n        } else {\n            console.log(\"failure\");\n        }\n    };\n\n    return (\n        <View>\n            <Text>Please enter your credentials to login</Text>\n            <TextInput placeholder='email'\n                onChangeText={setEmail}\n                value={email} />\n            <TextInput placeholder='Password'\n                onChangeText={setPassword}\n                value={password} />\n            <Button title=\"Login\" onPress={() => dispatch(login(email, password))} />\n        </View>\n    );\n}\n\nexport default LoginScreen;"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGA,SAASA,WAAT,OAAqC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACjC,gBAA0B,qBAAS,EAAT,CAA1B;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgC,qBAAS,EAAT,CAAhC;EAAA;EAAA,IAAOC,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMC,QAAQ,GAAG,8BAAjB;;EAEA,SAAeC,IAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACqCC,WAAW,CAACC,YAAZ,CAAyB,OAAzB,CADrC;;UAAA;YACQC,oBADR;YAAA;YAAA,kCAEqCF,WAAW,CAACC,YAAZ,CAAyB,OAAzB,CAFrC;;UAAA;YAEQE,oBAFR;;YAGI,IAAID,oBAAoB,IAAIC,oBAA5B,EAAkD;cAC9CC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,oBAAvB;cACAJ,QAAQ,CAAC,8BAAYI,oBAAZ,EAAkCC,oBAAlC,CAAD,CAAR;YACH,CAHD,MAGO;cACHC,OAAO,CAACC,GAAR,CAAY,SAAZ;YACH;;UARL;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EASC;EAED,OACI,oBAAC,iBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,oBAAC,iBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,4CADJ,EAEI,oBAAC,sBAAD;IAAW,WAAW,EAAC,OAAvB;IACI,YAAY,EAAEV,QADlB;IAEI,KAAK,EAAED,KAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,EAKI,oBAAC,sBAAD;IAAW,WAAW,EAAC,UAAvB;IACI,YAAY,EAAEG,WADlB;IAEI,KAAK,EAAED,QAFX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALJ,EAQI,oBAAC,mBAAD;IAAQ,KAAK,EAAC,OAAd;IAAsB,OAAO,EAAE;MAAA,OAAME,QAAQ,CAAC,wBAAMJ,KAAN,EAAaE,QAAb,CAAD,CAAd;IAAA,CAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARJ,CADJ;AAYH;;eAEcJ,W"},"metadata":{},"sourceType":"script"}