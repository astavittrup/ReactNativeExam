{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signup = exports.restoreUser = exports.logout = exports.login = exports.SIGNUP = exports.RESTORE_USER = exports.LOGOUT = exports.LOGIN = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar SecureStore = _interopRequireWildcard(require(\"expo-secure-store\"));\n\nvar _LoginScreen = _interopRequireDefault(require(\"../../screens/LoginScreen\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SIGNUP = 'SIGNUP';\nexports.SIGNUP = SIGNUP;\nvar LOGIN = 'LOGIN';\nexports.LOGIN = LOGIN;\nvar RESTORE_USER = 'RESTORE_USER';\nexports.RESTORE_USER = RESTORE_USER;\nvar LOGOUT = \"LOGOUT\";\nexports.LOGOUT = LOGOUT;\n\nvar restoreUser = function restoreUser(email, token) {\n  return {\n    type: RESTORE_USER,\n    payload: {\n      email: email,\n      idToken: token\n    }\n  };\n};\n\nexports.restoreUser = restoreUser;\n\nvar logout = function logout() {\n  SecureStore.deleteItemAsync('email');\n  SecureStore.deleteItemAsync('token');\n  return {\n    type: LOGOUT\n  };\n};\n\nexports.logout = logout;\n\nvar signup = function signup(email, password) {\n  return function _callee(dispatch) {\n    var response, data;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=', +undefined, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n\n            if (!response.ok) {} else {\n              dispatch({\n                type: SIGNUP,\n                payload: {\n                  email: data.email,\n                  idToken: data.idToken\n                }\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.signup = signup;\n\nvar login = function login(email, password) {\n  return function _callee2(dispatch) {\n    var response, data;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + undefined, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email,\n                password: password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regenerator.default.awrap(response.json());\n\n          case 5:\n            data = _context2.sent;\n            console.log(data);\n\n            if (!response.ok) {\n              console.log(\"there was a problem with the login\");\n            } else {\n              dispatch({\n                type: LOGIN,\n                payload: {\n                  email: data.email,\n                  idToken: data.idToken\n                }\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.login = login;","map":{"version":3,"names":["SIGNUP","LOGIN","RESTORE_USER","LOGOUT","restoreUser","email","token","type","payload","idToken","logout","SecureStore","deleteItemAsync","signup","password","dispatch","fetch","method","headers","body","JSON","stringify","returnSecureToken","response","json","data","console","log","ok","login"],"sources":["/Users/astavittrupgraversen/repo/ReactNativeExam/store/actions/UserActions.js"],"sourcesContent":["import * as SecureStore from 'expo-secure-store';\nimport LoginScreen from '../../screens/LoginScreen';\nexport const SIGNUP = 'SIGNUP';\nexport const LOGIN = 'LOGIN';\nexport const RESTORE_USER = 'RESTORE_USER';\nexport const LOGOUT = \"LOGOUT\";\nimport {API_KEY} from '@env'\n\nexport const restoreUser = (email, token) => {\n    return { type: RESTORE_USER, payload: { email, idToken: token } };\n};\n\nexport const logout = () => {\n    SecureStore.deleteItemAsync('email');\n    SecureStore.deleteItemAsync('token');\n    return { type: LOGOUT }\n}\n\nexport const signup = (email, password) => {\n    return async dispatch => {\n        const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=', + API_KEY, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ //javascript to json\n                //key value pairs of data you want to send to server\n                // ...\n                email: email,\n                password: password,\n                returnSecureToken: true\n            })\n        });\n\n\n        \n\n        // console.log(await response.json());\n\n        const data = await response.json(); // json to javascript\n        console.log(data);\n        if (!response.ok) {\n            //There was a problem..\n        } else {\n            // await SecureStore.setItemAsync('email', data.email);\n            // await SecureStore.setItemAsync('token', data.idToken);\n            dispatch({ type: SIGNUP, payload: { email: data.email, idToken: data.idToken } })\n        }\n    };\n};\n\nexport const login = (email, password) => {\n    return async dispatch => {\n        const response = await fetch ('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' + API_KEY, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password,\n                returnSecureToken: true\n            })\n            \n        });\n        const data = await response.json();\n        console.log(data);\n        if (!response.ok) {\n            console.log(\"there was a problem with the login\")\n        } else {\n            // await SecureStore.setItemAsync('email', data.email); // comment out to work in browser\n            // await SecureStore.setItemAsync('token', data.idToken);  // comment out to work in browser\n            dispatch({ type: LOGIN, payload: { email: data.email, idToken: data.idToken } })\n        }\n    }}\n\n    "],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;AACO,IAAMA,MAAM,GAAG,QAAf;;AACA,IAAMC,KAAK,GAAG,OAAd;;AACA,IAAMC,YAAY,GAAG,cAArB;;AACA,IAAMC,MAAM,GAAG,QAAf;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;EACzC,OAAO;IAAEC,IAAI,EAAEL,YAAR;IAAsBM,OAAO,EAAE;MAAEH,KAAK,EAALA,KAAF;MAASI,OAAO,EAAEH;IAAlB;EAA/B,CAAP;AACH,CAFM;;;;AAIA,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;EACxBC,WAAW,CAACC,eAAZ,CAA4B,OAA5B;EACAD,WAAW,CAACC,eAAZ,CAA4B,OAA5B;EACA,OAAO;IAAEL,IAAI,EAAEJ;EAAR,CAAP;AACH,CAJM;;;;AAMA,IAAMU,MAAM,GAAG,SAATA,MAAS,CAACR,KAAD,EAAQS,QAAR,EAAqB;EACvC,OAAO,iBAAMC,QAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACoBC,KAAK,CAAC,gEAAD,EAAmE,UAAnE,EAA8E;cACtGC,MAAM,EAAE,MAD8F;cAEtGC,OAAO,EAAE;gBACL,gBAAgB;cADX,CAF6F;cAKtGC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBAGjBhB,KAAK,EAAEA,KAHU;gBAIjBS,QAAQ,EAAEA,QAJO;gBAKjBQ,iBAAiB,EAAE;cALF,CAAf;YALgG,CAA9E,CADzB;;UAAA;YACGC,QADH;YAAA;YAAA,kCAoBgBA,QAAQ,CAACC,IAAT,EApBhB;;UAAA;YAoBGC,IApBH;YAqBHC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;YACA,IAAI,CAACF,QAAQ,CAACK,EAAd,EAAkB,CAEjB,CAFD,MAEO;cAGHb,QAAQ,CAAC;gBAAER,IAAI,EAAEP,MAAR;gBAAgBQ,OAAO,EAAE;kBAAEH,KAAK,EAAEoB,IAAI,CAACpB,KAAd;kBAAqBI,OAAO,EAAEgB,IAAI,CAAChB;gBAAnC;cAAzB,CAAD,CAAR;YACH;;UA5BE;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAP;AA8BH,CA/BM;;;;AAiCA,IAAMoB,KAAK,GAAG,SAARA,KAAQ,CAACxB,KAAD,EAAQS,QAAR,EAAqB;EACtC,OAAO,kBAAMC,QAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACoBC,KAAK,CAAE,wFAAF,EAA0F;cAClHC,MAAM,EAAE,MAD0G;cAElHC,OAAO,EAAE;gBACL,gBAAgB;cADX,CAFyG;cAKlHC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACjBhB,KAAK,EAAEA,KADU;gBAEjBS,QAAQ,EAAEA,QAFO;gBAGjBQ,iBAAiB,EAAE;cAHF,CAAf;YAL4G,CAA1F,CADzB;;UAAA;YACGC,QADH;YAAA;YAAA,kCAagBA,QAAQ,CAACC,IAAT,EAbhB;;UAAA;YAaGC,IAbH;YAcHC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;YACA,IAAI,CAACF,QAAQ,CAACK,EAAd,EAAkB;cACdF,OAAO,CAACC,GAAR,CAAY,oCAAZ;YACH,CAFD,MAEO;cAGHZ,QAAQ,CAAC;gBAAER,IAAI,EAAEN,KAAR;gBAAeO,OAAO,EAAE;kBAAEH,KAAK,EAAEoB,IAAI,CAACpB,KAAd;kBAAqBI,OAAO,EAAEgB,IAAI,CAAChB;gBAAnC;cAAxB,CAAD,CAAR;YACH;;UArBE;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAP;AAsBE,CAvBC"},"metadata":{},"sourceType":"script"}