{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useSelector } from 'react-redux';\nimport Input from \"./../components/Input\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EditProfileScreen = function EditProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var username = useSelector(function (state) {\n    return state.user.username;\n  });\n\n  var _useState = useState(username !== ''),\n      _useState2 = _slicedToArray(_useState, 2),\n      validUsername = _useState2[0],\n      setValidUsername = _useState2[1];\n\n  var save = function save() {};\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"I am EditProfileScreen\"\n    }), _jsx(Input, {\n      label: \"Username\",\n      inputValue: username,\n      error: \"Username cannot be empty.\",\n      valid: validUsername,\n      setValid: setValidUsername\n    }), _jsx(Input, {\n      label: \"Hi\",\n      inputValue: \"\",\n      error: \"Cannot be empty\"\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: save\n    })]\n  });\n};\n\nexport default EditProfileScreen;","map":{"version":3,"sources":["/Users/astavittrupgraversen/react_native/screens/EditProfileScreen.js"],"names":["useSelector","Input","useState","EditProfileScreen","navigation","username","state","user","validUsername","setValidUsername","save"],"mappings":";;;;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC1C,MAAMC,QAAQ,GAAGL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,QAAf;AAAA,GAAN,CAA5B;;AACA,kBAA0CH,QAAQ,CAACG,QAAQ,KAAK,EAAd,CAAlD;AAAA;AAAA,MAAOG,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,CAQlB,CARD;;AAUA,SACI,MAAC,IAAD;AAAA,eACI,KAAC,IAAD;AAAA;AAAA,MADJ,EAGI,KAAC,KAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,UAAU,EAAEL,QAFhB;AAGI,MAAA,KAAK,EAAC,2BAHV;AAII,MAAA,KAAK,EAAEG,aAJX;AAKI,MAAA,QAAQ,EAAEC;AALd,MAHJ,EAUI,KAAC,KAAD;AAAO,MAAA,KAAK,EAAC,IAAb;AAAkB,MAAA,UAAU,EAAC,EAA7B;AAAgC,MAAA,KAAK,EAAC;AAAtC,MAVJ,EAYI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAEC;AAA9B,MAZJ;AAAA,IADJ;AAgBH,CA9BD;;AAgCA,eAAeP,iBAAf","sourcesContent":["import { View, Text, Button } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport Input from './../components/Input'\nimport { useState } from 'react';\n\nconst EditProfileScreen = ({ navigation }) => {\n    const username = useSelector(state => state.user.username);\n    const [validUsername, setValidUsername] = useState(username !== '')\n\n    const save = () => {\n        // ** if the \"form\" is valid ** {\n        // save data - we need access to text here...\n        //} else {\n        // display error message\n        //}\n\n\n    }\n\n    return (\n        <View>\n            <Text>I am EditProfileScreen</Text>\n\n            <Input\n                label=\"Username\"\n                inputValue={username}\n                error=\"Username cannot be empty.\"\n                valid={validUsername}\n                setValid={setValidUsername}\n            />\n            <Input label=\"Hi\" inputValue=\"\" error=\"Cannot be empty\" />\n\n            <Button title=\"Save\" onPress={save} />\n        </View>\n    );\n}\n\nexport default EditProfileScreen;"]},"metadata":{},"sourceType":"module"}