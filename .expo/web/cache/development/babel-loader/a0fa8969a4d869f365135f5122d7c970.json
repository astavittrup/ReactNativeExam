{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = require(\"react\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _UserActions = require(\"./../store/actions/UserActions\");\n\nvar SecureStore = _interopRequireWildcard(require(\"expo-secure-store\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/astavittrupgraversen/repo/ReactNativeExam/screens/SignupScreen.jsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SignupScreen = function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = (0, _reactRedux.useDispatch)();\n\n  function load() {\n    var emailFromSecureStore, tokenFromSecureStore;\n    return _regenerator.default.async(function load$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(SecureStore.getItemAsync('email'));\n\n          case 2:\n            emailFromSecureStore = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(SecureStore.getItemAsync('token'));\n\n          case 5:\n            tokenFromSecureStore = _context.sent;\n\n            if (emailFromSecureStore && tokenFromSecureStore) {\n              console.log(\"success\", emailFromSecureStore);\n              dispatch((0, _UserActions.restoreUser)(emailFromSecureStore, tokenFromSecureStore));\n            } else {\n              console.log(\"failure\");\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  (0, _react.useEffect)(function () {}, []);\n  return React.createElement(_reactNativeSafeAreaContext.SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.Text, {\n    style: styles.test,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Signup\"), React.createElement(_reactNative.TextInput, {\n    style: styles.textInput,\n    placeholder: \"Enter your email\",\n    onChangeText: setEmail,\n    value: email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(_reactNative.TextInput, {\n    style: styles.textInput,\n    placeholder: \"Enter your password\",\n    onChangeText: setPassword,\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(_reactNative.View, {\n    style: styles.test,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }\n  }, React.createElement(_reactNative.Button, {\n    title: \"Signup\",\n    onPress: function onPress() {\n      return dispatch((0, _UserActions.signup)(email, password));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(_reactNative.Button, {\n    style: styles.textInput,\n    title: \"Login Instead\",\n    color: \"#f194ff\",\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  test: {\n    padding: 20\n  },\n  textInput: {\n    padding: 15,\n    maxWidth: 250,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  }\n});\n\nvar _default = SignupScreen;\nexports.default = _default;","map":{"version":3,"names":["SignupScreen","navigation","email","setEmail","password","setPassword","dispatch","load","SecureStore","getItemAsync","emailFromSecureStore","tokenFromSecureStore","console","log","styles","container","test","textInput","navigate","StyleSheet","create","flex","justifyContent","alignItems","padding","maxWidth","paddingHorizontal","backgroundColor","borderRadius","borderColor","borderWidth"],"sources":["/Users/astavittrupgraversen/repo/ReactNativeExam/screens/SignupScreen.jsx"],"sourcesContent":["import { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { restoreUser, signup } from './../store/actions/UserActions'\nimport * as SecureStore from 'expo-secure-store';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nconst SignupScreen = ({ navigation }) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n\n    // const token = useSelector(state => state.user.idToken)\n    // const emailTest = useSelector(state => state.user.email)\n    // console.log(token);\n    // console.log(emailTest);\n\n    async function load() {\n        let emailFromSecureStore = await SecureStore.getItemAsync('email');\n        let tokenFromSecureStore = await SecureStore.getItemAsync('token');\n        if (emailFromSecureStore && tokenFromSecureStore) {\n            console.log(\"success\", emailFromSecureStore);\n            dispatch(restoreUser(emailFromSecureStore, tokenFromSecureStore));\n        } else {\n            console.log(\"failure\");\n        }\n    }\n    // read from secure store\n    useEffect(() => {\n        // load(); // comment out in order to work in browser \n    }, [])\n\n\n    return (\n      <SafeAreaView style={styles.container}>\n        <View>\n            <Text style={styles.test}>Signup</Text>\n            <TextInput \n             style={styles.textInput}\n            placeholder='Enter your email'\n                onChangeText={setEmail}\n                value={email} />\n\n            <TextInput \n             style={styles.textInput}\n            placeholder='Enter your password'\n                onChangeText={setPassword}\n                value={password} />\n<View style={styles.test}>\n            <Button title=\"Signup\" onPress={() => dispatch(signup(email, password))} />\n           \n          \n            <Button \n            style={styles.textInput}\n            title=\"Login Instead\"\n            color=\"#f194ff\"\n         onPress={() => navigation.navigate(\"Login\")} />\n             </View> \n        </View>\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n\n    test: {\n        padding: 20,\n    },\n\n    textInput: {\n        padding: 15,\n        maxWidth: 250,\n        paddingHorizontal: 15,\n        backgroundColor: '#FFF',\n        borderRadius: 60,\n        borderColor: '#C0C0C0',\n        borderWidth: 1\n    },\n\n});\n\n\nexport default SignupScreen;"],"mappings":"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"},"metadata":{},"sourceType":"script"}