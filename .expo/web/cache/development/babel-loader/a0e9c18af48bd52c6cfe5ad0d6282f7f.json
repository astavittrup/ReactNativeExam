{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, addChatroom, deleteChatroom, fetchChatrooms, subtract, toggleHappy } from \"../store/actions/ChatActions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Screen1 = function Screen1(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      onChangeText = _useState2[1];\n\n  var isHappy = useSelector(function (state) {\n    return state.chat.isHappy;\n  });\n  var dispatch = useDispatch();\n  var numberOfIcecreams = useSelector(function (state) {\n    return state.chat.counter;\n  });\n  var chatrooms = useSelector(function (state) {\n    return state.chat.chatrooms;\n  });\n  useEffect(function () {\n    dispatch(fetchChatrooms());\n  }, []);\n  console.log(\"chatrooms\", chatrooms);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      children: [_jsx(Text, {\n        children: item.title\n      }), _jsx(Button, {\n        title: \"Delete this chatroom\",\n        onPress: function onPress() {\n          return dispatch(deleteChatroom(item.id));\n        }\n      })]\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"I am screen 1\"\n    }), _jsxs(Text, {\n      children: [\"Is Christian happy? \", isHappy.toString()]\n    }), _jsxs(Text, {\n      children: [\"How many icecreams should Christians children have \", numberOfIcecreams]\n    }), _jsx(Button, {\n      title: \"Go to screen 2\",\n      onPress: function onPress() {\n        return navigation.navigate('Screen2');\n      }\n    }), _jsx(Button, {\n      title: \"Flip happy\",\n      onPress: function onPress() {\n        return dispatch(toggleHappy());\n      }\n    }), _jsx(Button, {\n      title: \"Give Icecream\",\n      onPress: function onPress() {\n        return dispatch(add());\n      }\n    }), _jsx(Button, {\n      title: \"Steal Icecream\",\n      onPress: function onPress() {\n        return dispatch(subtract());\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Chatroom name\",\n      style: styles.input,\n      onChangeText: onChangeText,\n      value: text\n    }), _jsx(Button, {\n      title: \"Add chatroom\",\n      onPress: function onPress() {\n        return dispatch(addChatroom(text));\n      }\n    }), _jsx(FlatList, {\n      data: chatrooms,\n      renderItem: renderItem\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\nexport default Screen1;","map":{"version":3,"sources":["/Users/astavittrupgraversen/react_native/screens/Screen1.tsx"],"names":["useEffect","useState","useDispatch","useSelector","add","addChatroom","deleteChatroom","fetchChatrooms","subtract","toggleHappy","Screen1","navigation","text","onChangeText","isHappy","state","chat","dispatch","numberOfIcecreams","counter","chatrooms","console","log","renderItem","item","title","id","toString","navigate","styles","input","StyleSheet","create","height","margin","borderWidth","padding"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, FlatList, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../App';\nimport { add, addChatroom, deleteChatroom, fetchChatrooms, subtract, toggleHappy } from '../store/actions/ChatActions';\n\nconst Screen1 = ({ navigation }: { navigation: any }) => {\n    const [text, onChangeText] = useState('');\n\n    const isHappy = useSelector((state: RootState) => state.chat.isHappy); // subscribing to the store's chat slice/part\n    const dispatch = useDispatch();\n    const numberOfIcecreams = useSelector((state: RootState) => state.chat.counter)\n    const chatrooms = useSelector((state: RootState) => state.chat.chatrooms);\n\n    useEffect(() => {\n        dispatch(fetchChatrooms())\n    }, []);\n\n    console.log(\"chatrooms\", chatrooms);\n\n    const renderItem = ({ item }: { item: any }) => (\n        <TouchableOpacity>\n            <Text>{item.title}</Text>\n            <Button title=\"Delete this chatroom\" onPress={() => dispatch(deleteChatroom(item.id))} />\n        </TouchableOpacity>\n    );\n\n\n    return (\n        <View>\n            <Text>I am screen 1</Text>\n            <Text>Is Christian happy? {isHappy.toString()}</Text>\n            <Text>How many icecreams should Christians children have {numberOfIcecreams}</Text>\n            <Button title=\"Go to screen 2\" onPress={() => navigation.navigate('Screen2')} />\n            <Button title=\"Flip happy\" onPress={() => dispatch(toggleHappy())} />\n\n            <Button title=\"Give Icecream\" onPress={() => dispatch(add())} />\n            <Button title=\"Steal Icecream\" onPress={() => dispatch(subtract())} />\n\n            <TextInput placeholder=\"Chatroom name\"\n                style={styles.input}\n                onChangeText={onChangeText}\n                value={text} />\n\n            <Button title='Add chatroom' onPress={() => dispatch(addChatroom(text))} />\n\n            <FlatList data={chatrooms} renderItem={renderItem} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n});\n\nexport default Screen1;"]},"metadata":{},"sourceType":"module"}